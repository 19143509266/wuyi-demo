{"version":3,"sources":["/home/runner/work/wuyi-demo/wuyi-demo/src/pages/Drag/index.less?asmodule","src/pages/Drag/drag.ts","src/pages/Drag/utils.ts","src/pages/Drag/hooks.ts","src/pages/Drag/Slider.tsx","src/pages/Drag/PanelEdit.tsx","src/pages/Drag/Shadow.tsx","src/pages/Drag/Grid.tsx","src/pages/Drag/index.tsx"],"sourcesContent":["\nimport \"/home/runner/work/wuyi-demo/wuyi-demo/src/pages/Drag/index.less?modules\";\nexport default {\"handle-br\": `handle-br-FPCyLFXZ`,\"move-top\": `move-top-84RxWb-F`,\"handle-bm\": `handle-bm-8ZBxED0p`,\"panel-edit\": `panel-edit-QXanYSqO`,\"move-bottom\": `move-bottom-gcluJZt5`,\"handle-tm\": `handle-tm-03Vu9wLG`,\"handle-bl\": `handle-bl-MWRg-3nx`,\"outline\": `outline-2up1cxIs`,\"handle-tr\": `handle-tr-f-OQfH4P`,\"big-box\": `big-box-IQDaZf3U`,\"handle\": `handle-jWjlXci3`,\"shadow\": `shadow-fhFUgMXu`,\"slider\": `slider-QZ55ldaJ`,\"item\": `item-azMQLrQV`,\"handle-tl\": `handle-tl-WVjysREz`,\"handle-ml\": `handle-ml-Ljn2uUtM`,\"handle-mr\": `handle-mr-wctDmcQV`,\"move\": `move-LvHYdgbl`,\"move-left\": `move-left-ns4wD4eV`,\"move-right\": `move-right-OlR4hbt3`}\n","export type DragItem = {\n  id: string\n  x: number\n  y: number\n  sizeX: number\n  sizeY: number\n}\n\nexport type ShadowPositionType = {\n  id?: string\n  x: number\n  y: number\n  sizeX: number\n  sizeY: number\n  type: 'new' | 'drag'\n}\n\n// pc 矩阵数量\nexport const pcMatrixCount = {\n  x: 36,\n  y: 18\n}\n\n// pc 画布 1600 * 900\nexport const pcCanvasSize = {\n  width: 1600,\n  height: 900\n}\n\nexport type scaleType = {\n  x: number\n  y: number\n}\n\nexport const SLIDER_WIDTH = 260\n\nexport const handlePositions = ['tl', 'tm', 'tr', 'ml', 'mr', 'bl', 'bm', 'br']\n","import { DragItem, pcCanvasSize, pcMatrixCount, scaleType } from './drag'\n\nexport const getPcMatrix = (type: 'x' | 'y', val: number, scale: scaleType) => {\n  if (type === 'x') {\n    return ((val * scale.x) / pcMatrixCount.x) * pcCanvasSize.width\n  } else if (type === 'y') {\n    return ((val * scale.y) / pcMatrixCount.y) * pcCanvasSize.height\n  }\n}\n\nexport const getDeltaInMatrix = (type: 'x' | 'y', val: number, scale: scaleType) => {\n  if (type === 'x') {\n    return (val / scale.x / pcCanvasSize.width) * pcMatrixCount.x\n  } else if (type === 'y') {\n    return (val / scale.y / pcCanvasSize.height) * pcMatrixCount.y\n  }\n  return 0\n}\n\n// 碰撞检测函数\nexport const isColliding = (item1: DragItem, item2: DragItem) => {\n  return (\n    item1.x < item2.x + item2.sizeX &&\n    item1.x + item1.sizeX > item2.x &&\n    item1.y < item2.y + item2.sizeY &&\n    item1.y + item1.sizeY > item2.y\n  )\n}\n\n// 碰撞处理函数\nexport const handleCollision = (\n  potentialNewComponent: DragItem,\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>\n) => {\n  let collisionDetected = false\n\n  setComponentData(prev => {\n    const resPos = setUpItem(prev, potentialNewComponent)\n    resPos.x = Math.min(Math.max(resPos.x, 0), pcMatrixCount.x - (resPos.sizeX || 0))\n    resPos.y = Math.max(resPos.y, 0)\n    const updatedComponentData = prev.map(item => {\n      if (item.id !== resPos.id && isColliding(resPos, item)) {\n        collisionDetected = true\n        let newY = item.y\n        if (resPos.y <= item.y) {\n          newY += resPos.sizeY - item.y\n        }\n        return { ...item, y: newY }\n      }\n      return item\n    })\n\n    return updatedComponentData\n  })\n\n  return collisionDetected\n}\n\n// 上方元素检测\nexport const checkUpElement = (\n  potentialNewComponent: DragItem,\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>,\n  isNew: boolean\n) => {\n  setComponentData(prev =>\n    prev.map(item => {\n      let newItem = item\n      if (item.y > 0) {\n        const res = setUpItem(prev, item)\n        newItem = res\n      }\n\n      // 更新当前组件或返回调整后的 newItem\n      return item.id === potentialNewComponent?.id && !isNew ? potentialNewComponent : newItem\n    })\n  )\n}\n\nexport const setUpItem = (prev: DragItem[], item: DragItem) => {\n  // 查找上方最近的元素\n  const upElement = prev\n    .filter(\n      pr =>\n        pr.y < item.y && pr.x < item.x + item.sizeX && pr.x + pr.sizeX > item.x && pr.id !== item.id\n    ) // 找到所有在当前元素上方且有水平重叠的元素\n    .reduce((closest: DragItem | null, current: DragItem) => {\n      // 如果 closest 为空，则返回 current；否则，返回 y 值更接近 item 的元素\n      return closest === null || current.y > closest.y ? current : closest\n    }, null)\n\n  if (upElement) {\n    // 检查x轴是否没有水平重叠\n    if (upElement.x + upElement.sizeX <= item.x || item.x + item.sizeX <= upElement.x) {\n      return { ...item, y: upElement.y } // 吸附到上方元素下方\n    } else {\n      if (item.y < upElement.y + upElement.sizeY) {\n        return { ...item, y: item.y - upElement.sizeY } // 吸附到上方元素下方\n      } else {\n        return { ...item, y: upElement.y + upElement.sizeY }\n      }\n    }\n  } else {\n    return { ...item, y: 0 }\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  DragItem,\n  pcCanvasSize,\n  pcMatrixCount,\n  scaleType,\n  ShadowPositionType,\n  SLIDER_WIDTH\n} from './drag'\nimport { checkUpElement, getDeltaInMatrix, handleCollision, setUpItem } from './utils'\n\nexport const useReSize = (\n  curComponent: DragItem | null,\n  setCurComponent: React.Dispatch<React.SetStateAction<DragItem | null>>,\n  componentData: DragItem[],\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>,\n  scale: scaleType,\n  setShadowPosition: React.Dispatch<React.SetStateAction<ShadowPositionType>>\n) => {\n  const curComponentRef = useRef(curComponent)\n  curComponentRef.current = curComponent\n\n  let resPos: DragItem | null = null\n\n  const handleResizeMouseDown = useCallback(\n    (e: React.MouseEvent, pos: string) => {\n      const startX = e.clientX\n      const startY = e.clientY\n\n      const initialSizeX = curComponentRef.current?.sizeX || 0\n      const initialSizeY = curComponentRef.current?.sizeY || 0\n      const initialX = curComponentRef.current?.x || 0\n      const initialY = curComponentRef.current?.y || 0\n\n      const onMouseMove = (moveEvent: MouseEvent) => {\n        if (!curComponentRef.current) return\n        const deltaX = Math.round(getDeltaInMatrix('x', moveEvent.clientX - startX, scale))\n        const deltaY = Math.round(getDeltaInMatrix('y', moveEvent.clientY - startY, scale))\n\n        let newSizeX = initialSizeX\n        let newSizeY = initialSizeY\n        let newX = initialX\n        let newY = initialY\n\n        switch (pos) {\n          case 'tl':\n            newSizeX = initialSizeX - deltaX\n            newSizeY = initialSizeY - deltaY\n            newX = initialX + deltaX\n            newY = initialY + deltaY\n            break\n          case 'tm':\n            newSizeY = initialSizeY - deltaY\n            newY = initialY + deltaY\n            break\n          case 'tr':\n            newSizeX = initialSizeX + deltaX\n            newSizeY = initialSizeY - deltaY\n            newY = initialY + deltaY\n            break\n          case 'ml':\n            newSizeX = initialSizeX - deltaX\n            newX = initialX + deltaX\n            break\n          case 'mr':\n            newSizeX = initialSizeX + deltaX\n            break\n          case 'bl':\n            newSizeX = initialSizeX - deltaX\n            newSizeY = initialSizeY + deltaY\n            newX = initialX + deltaX\n            break\n          case 'bm':\n            newSizeY = initialSizeY + deltaY\n            break\n          case 'br':\n            newSizeX = initialSizeX + deltaX\n            newSizeY = initialSizeY + deltaY\n            break\n          default:\n            break\n        }\n\n        // 边界判断\n        if (newX + newSizeX > pcMatrixCount.x) {\n          newX = pcMatrixCount.x - (curComponentRef.current?.sizeX || 0)\n          newSizeX = curComponentRef.current?.sizeX || 0\n        }\n        if (newX < 0) {\n          newX = 0\n          newSizeX = curComponentRef.current?.sizeX || 0\n        }\n        if (newY < 0) {\n          newY = 0\n          newSizeY = curComponentRef.current?.sizeY || 0\n        }\n\n        const potentialNewComponent = {\n          ...curComponentRef.current,\n          sizeX: newSizeX,\n          sizeY: newSizeY,\n          x: newX,\n          y: newY\n        }\n        resPos = potentialNewComponent\n        setShadowPosition({ ...resPos, type: 'drag' })\n\n        // 处理碰撞\n        const hasCollision = handleCollision(resPos, setComponentData)\n\n        if (!hasCollision) {\n          setCurComponent(resPos)\n          checkUpElement(curComponentRef.current, setComponentData, false)\n        }\n      }\n\n      const onMouseUp = () => {\n        setShadowPosition({ x: 0, y: 0, sizeX: 0, sizeY: 0, type: 'new' })\n        if (resPos) {\n          const res = setUpItem(componentData, resPos)\n          res.x = Math.min(Math.max(res.x, 0), pcMatrixCount.x - (res.sizeX || 0))\n          res.y = Math.max(res.y, 0)\n          setCurComponent(res)\n          setComponentData(prev => prev.map(item => (item.id === res?.id ? res : item)))\n        }\n        window.removeEventListener('mousemove', onMouseMove)\n        window.removeEventListener('mouseup', onMouseUp)\n      }\n\n      window.addEventListener('mousemove', onMouseMove)\n      window.addEventListener('mouseup', onMouseUp)\n    },\n    [curComponent, setCurComponent, componentData, setComponentData, scale]\n  )\n\n  return { handleResizeMouseDown }\n}\n\n// 拖拽钩子\nexport const useMoveMouseDown = (\n  curComponent: DragItem | null,\n  setCurComponent: React.Dispatch<React.SetStateAction<DragItem | null>>,\n  componentData: DragItem[],\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>,\n  scale: scaleType,\n  setShadowPosition: React.Dispatch<React.SetStateAction<ShadowPositionType>>\n) => {\n  const curComponentRef = useRef(curComponent)\n  curComponentRef.current = curComponent\n\n  let resPos: DragItem | null = null\n\n  const handleMoveMouseDown = useCallback(\n    (e: React.MouseEvent) => {\n      const startX = e.clientX\n      const startY = e.clientY\n\n      const initialX = curComponentRef.current?.x || 0\n      const initialY = curComponentRef.current?.y || 0\n\n      const onMouseMove = (moveEvent: MouseEvent) => {\n        if (!curComponentRef.current) return\n        const deltaX = Math.round(getDeltaInMatrix('x', moveEvent.clientX - startX, scale))\n        const deltaY = Math.round(getDeltaInMatrix('y', moveEvent.clientY - startY, scale))\n\n        let newX = initialX + deltaX\n        let newY = initialY + deltaY\n\n        // 确保元素不越界\n        newX = Math.min(Math.max(newX, 0), pcMatrixCount.x - (curComponentRef.current?.sizeX || 0))\n        newY = Math.max(newY, 0)\n\n        const potentialNewComponent = { ...curComponentRef.current, x: newX, y: newY }\n        resPos = potentialNewComponent\n        setShadowPosition({ ...resPos, type: 'drag' })\n\n        // 处理碰撞\n        const hasCollision = handleCollision(resPos, setComponentData)\n\n        if (!hasCollision) {\n          setCurComponent(resPos)\n          checkUpElement(curComponentRef.current, setComponentData, false)\n        }\n      }\n\n      const onMouseUp = () => {\n        setShadowPosition({ x: 0, y: 0, sizeX: 0, sizeY: 0, type: 'new' })\n        if (resPos) {\n          const res = setUpItem(componentData, resPos)\n          res.x = Math.min(Math.max(res.x, 0), pcMatrixCount.x - (res.sizeX || 0))\n          res.y = Math.max(res.y, 0)\n          setCurComponent(res)\n          setComponentData(prev => prev.map(item => (item.id === res?.id ? res : item)))\n        }\n        window.removeEventListener('mousemove', onMouseMove)\n        window.removeEventListener('mouseup', onMouseUp)\n      }\n\n      window.addEventListener('mousemove', onMouseMove)\n      window.addEventListener('mouseup', onMouseUp)\n    },\n    [curComponent, setCurComponent, componentData, setComponentData, scale]\n  )\n\n  return { handleMoveMouseDown }\n}\n\ntype UseComponentPositionAndSizeReturn = {\n  matrixX: number\n  matrixY: number\n  sizeX: number\n  sizeY: number\n}\n\n// sizeX sizeY 钩子\nexport const useComponentPositionAndSize = (\n  clientX: number,\n  clientY: number,\n  componentWidth: number,\n  componentHeight: number\n): UseComponentPositionAndSizeReturn => {\n  const [matrixX, setMatrixX] = useState(0)\n  const [matrixY, setMatrixY] = useState(0)\n  const [sizeX, setSizeX] = useState(1)\n  const [sizeY, setSizeY] = useState(1)\n\n  useEffect(() => {\n    const matrixWidth = pcCanvasSize.width\n    const matrixHeight = pcCanvasSize.height\n\n    const calculatedMatrixX = Math.round((clientX - SLIDER_WIDTH) / (matrixWidth / pcMatrixCount.x))\n    const calculatedMatrixY = Math.round(clientY / (matrixHeight / pcMatrixCount.y))\n\n    const calculatedSizeX = Math.round((componentWidth / matrixWidth) * pcMatrixCount.x)\n    const calculatedSizeY = Math.round((componentHeight / matrixHeight) * pcMatrixCount.y)\n\n    setMatrixX(calculatedMatrixX)\n    setMatrixY(calculatedMatrixY)\n    setSizeX(calculatedSizeX)\n    setSizeY(calculatedSizeY)\n  }, [clientX, clientY, componentWidth, componentHeight])\n\n  return { matrixX, matrixY, sizeX, sizeY }\n}\n","import React, { useState } from 'react'\nimport Styles from './index.less'\nimport {\n  DragItem,\n  pcCanvasSize,\n  pcMatrixCount,\n  scaleType,\n  ShadowPositionType,\n  SLIDER_WIDTH\n} from './drag'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useComponentPositionAndSize } from './hooks'\nimport { checkUpElement } from './utils'\n\ntype Props = {\n  setShadowPosition: (val: ShadowPositionType) => void\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>\n}\n\nconst Slider = (props: Props) => {\n  const { setShadowPosition, setComponentData } = props\n  const componentWidth = 200\n  const componentHeight = 150\n  const [dragPosition, setDragPosition] = useState({ x: 0, y: 0 })\n\n  const { matrixX, matrixY, sizeX, sizeY } = useComponentPositionAndSize(\n    dragPosition.x,\n    dragPosition.y,\n    componentWidth,\n    componentHeight\n  )\n  // 矩阵单元格的宽度和高度\n  const matrixWidth = pcCanvasSize.width / pcMatrixCount.x\n  const matrixHeight = pcCanvasSize.height / pcMatrixCount.y\n\n  const handleDrag = (event: React.DragEvent<HTMLDivElement>) => {\n    const x = event.clientX\n    const y = event.clientY\n\n    if (x > 0 && y > 0) {\n      setDragPosition({ x, y })\n    }\n    let newX = Math.round((x - SLIDER_WIDTH) / matrixWidth)\n    let newY = Math.round(y / matrixHeight)\n    setShadowPosition({ x: newX, y: newY, sizeX: 5, sizeY: 3, type: 'new' })\n  }\n\n  const handleDragEnd = () => {\n    const x = dragPosition.x\n    const y = dragPosition.y\n    if (x > SLIDER_WIDTH && y > 0) {\n      const newComponent: DragItem = {\n        id: uuidv4(),\n        x: matrixX,\n        y: matrixY,\n        sizeX: sizeX,\n        sizeY: sizeY\n      }\n      setComponentData((pre: DragItem[]) => [...pre, newComponent])\n      checkUpElement(newComponent, setComponentData, true)\n    }\n  }\n\n  return (\n    <div className={Styles.slider} style={{ width: SLIDER_WIDTH }}>\n      {Array.from({ length: 3 }).map((_, index) => (\n        <div\n          key={index}\n          className={Styles.item}\n          draggable\n          onDrag={handleDrag}\n          onDragEnd={handleDragEnd}\n        >\n          item{index + 1}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Slider\n","import React from 'react'\nimport { DragItem, handlePositions, scaleType, ShadowPositionType } from './drag'\nimport Styles from './index.less'\nimport { useMoveMouseDown, useReSize } from './hooks'\nimport { getPcMatrix } from './utils'\n\ntype Props = {\n  componentData: DragItem[]\n  setComponentData: React.Dispatch<React.SetStateAction<DragItem[]>>\n  curComponent: DragItem | null\n  setCurComponent: React.Dispatch<React.SetStateAction<DragItem | null>>\n  scale: scaleType\n  setShadowPosition: React.Dispatch<React.SetStateAction<ShadowPositionType>>\n}\n\nconst PanelEdit = (props: Props) => {\n  const {\n    componentData,\n    setComponentData,\n    curComponent,\n    setCurComponent,\n    scale,\n    setShadowPosition\n  } = props\n  const { handleResizeMouseDown } = useReSize(\n    curComponent,\n    setCurComponent,\n    componentData,\n    setComponentData,\n    scale,\n    setShadowPosition\n  )\n  const { handleMoveMouseDown } = useMoveMouseDown(\n    curComponent,\n    setCurComponent,\n    componentData,\n    setComponentData,\n    scale,\n    setShadowPosition\n  )\n\n  const handleClick = (item: DragItem) => {\n    setCurComponent(item)\n  }\n\n  return (\n    <div style={{ width: '100%', height: '100%', userSelect: 'none' }}>\n      {componentData.map(item => (\n        <div\n          key={item.id}\n          style={{\n            width: getPcMatrix('x', item.sizeX, scale),\n            height: getPcMatrix('y', item.sizeY, scale),\n            background: '#fff000',\n            transform: `translate(${getPcMatrix('x', item.x, scale)}px, ${getPcMatrix('y', item.y, scale)}px)`,\n            position: 'absolute',\n            zIndex: 999\n          }}\n          onClick={() => handleClick(item)}\n        >\n          {item.id}\n          {curComponent && curComponent.id === item.id ? (\n            <div className={Styles.outline}>\n              {handlePositions.map(pos => (\n                <div\n                  key={pos}\n                  className={`${Styles['handle']} ${Styles[`handle-${pos}`]}`}\n                  onMouseDown={e => handleResizeMouseDown(e, pos)}\n                ></div>\n              ))}\n              {['top', 'bottom', 'left', 'right'].map(pos => (\n                <div\n                  key={pos}\n                  className={`${Styles.move} ${Styles[`move-${pos}`]}`}\n                  onMouseDown={e => handleMoveMouseDown(e)}\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default PanelEdit\n","import React, { useMemo } from 'react'\nimport Styles from './index.less'\nimport {\n  DragItem,\n  pcCanvasSize,\n  pcMatrixCount,\n  scaleType,\n  ShadowPositionType,\n  SLIDER_WIDTH\n} from './drag'\nimport { setUpItem } from './utils'\n\ntype Props = {\n  shadowPosition: ShadowPositionType\n  scale: scaleType\n  componentData: DragItem[]\n}\n\nconst Shadow = (props: Props) => {\n  const { shadowPosition, scale, componentData } = props\n\n  if (\n    shadowPosition.x < 0 ||\n    shadowPosition.y < 0 ||\n    (shadowPosition.x === 0 && shadowPosition.y === 0)\n  ) {\n    return null\n  }\n\n  // 矩阵单元格的宽度和高度\n  const matrixWidth = pcCanvasSize.width / pcMatrixCount.x\n  const matrixHeight = pcCanvasSize.height / pcMatrixCount.y\n\n  const styleInfo = useMemo(() => {\n    const shadow = {\n      id: 'shadow',\n      x: shadowPosition.x,\n      y: shadowPosition.y,\n      sizeX: shadowPosition.sizeX,\n      sizeY: shadowPosition.sizeY\n    }\n    const res = setUpItem(componentData, shadow)\n    // 确保元素不越界\n    res.x = Math.min(Math.max(res.x, 0), pcMatrixCount.x - (res.sizeX || 0))\n    res.y = Math.max(res.y, 0)\n\n    // 计算阴影左上角对齐到网格的位置\n    let left = res.x * matrixWidth\n    let top = res.y * matrixHeight\n\n    // 调整宽度和高度，使其为单元格大小的整数倍\n    const adjustedWidth = res.sizeX * matrixWidth\n    const adjustedHeight = res.sizeY * matrixHeight\n\n    const style = {\n      transform: `translate(${left * scale.x}px, ${top * scale.y}px) rotate(0deg)`,\n      width: adjustedWidth * scale.x,\n      height: adjustedHeight * scale.y,\n      transition: '0.1s',\n      zIndex: 10\n    }\n    return style\n  }, [shadowPosition, matrixWidth, matrixHeight])\n\n  return <div className={Styles.shadow} style={styleInfo}></div>\n}\n\nexport default Shadow\n","import React, { useRef, useEffect } from 'react'\nimport { pcCanvasSize, pcMatrixCount, scaleType } from './drag'\n\ntype Props = {\n  scale: scaleType\n}\n\nconst Grid: React.FC<Props> = ({ scale }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      const ctx = canvas.getContext('2d')\n      if (ctx) {\n        const { width, height } = pcCanvasSize\n        canvas.width = width * scale.x\n        canvas.height = height * scale.y\n\n        // 设置网格样式\n        ctx.strokeStyle = '#e0e0e0'\n        ctx.lineWidth = 1\n\n        // 计算每个网格的大小\n        const cellWidth = width / pcMatrixCount.x\n        const cellHeight = height / pcMatrixCount.y\n\n        // 绘制列\n        for (let x = 0; x <= pcMatrixCount.x; x++) {\n          ctx.beginPath()\n          ctx.moveTo(x * cellWidth * scale.x, 0)\n          ctx.lineTo(x * cellWidth * scale.x, height * scale.y)\n          ctx.stroke()\n        }\n\n        // 绘制行\n        for (let y = 0; y <= pcMatrixCount.y; y++) {\n          ctx.beginPath()\n          ctx.moveTo(0, y * cellHeight * scale.y)\n          ctx.lineTo(width * scale.x, y * cellHeight * scale.y)\n          ctx.stroke()\n        }\n      }\n    }\n  }, [scale])\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        backgroundColor: '#f0f0f0',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        border: '1px solid #d0d0d0',\n        borderRadius: '4px',\n        overflow: 'hidden',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        boxSizing: 'border-box',\n        zIndex: 1\n      }}\n    />\n  )\n}\n\nexport default Grid\n","import React, { useEffect, useState } from 'react'\nimport Slider from './Slider'\nimport PanelEdit from './PanelEdit'\nimport { DragItem, pcCanvasSize, scaleType, ShadowPositionType, SLIDER_WIDTH } from './drag'\nimport Shadow from './Shadow'\nimport Styles from './index.less'\nimport Grid from './Grid'\n\nconst Drag = () => {\n  const [componentData, setComponentData] = useState<DragItem[]>([])\n  const [curComponent, setCurComponent] = useState<DragItem | null>(null)\n  const [shadowPosition, setShadowPosition] = useState<ShadowPositionType>({\n    x: 0,\n    y: 0,\n    sizeX: 5,\n    sizeY: 3,\n    type: 'new'\n  })\n  const [scale, setScale] = useState<scaleType>({ x: 1, y: 1 })\n\n  useEffect(() => {\n    const updateScale = () => {\n      const screenWidth = window.innerWidth - SLIDER_WIDTH\n      const screenHeight = window.innerHeight\n      const scaleX = screenWidth / pcCanvasSize.width\n      const scaleY = screenHeight / pcCanvasSize.height\n      setScale({ x: scaleX, y: scaleY })\n    }\n    window.addEventListener('resize', updateScale)\n    updateScale()\n    return () => {\n      window.removeEventListener('resize', updateScale)\n    }\n  }, [])\n\n  return (\n    <div className={Styles['big-box']}>\n      <Slider setShadowPosition={setShadowPosition} setComponentData={setComponentData} />\n      <div className={Styles['panel-edit']} style={{ width: `calc(100% - ${SLIDER_WIDTH}px)` }}>\n        <Shadow shadowPosition={shadowPosition} scale={scale} componentData={componentData} />\n        <PanelEdit\n          componentData={componentData}\n          setComponentData={setComponentData}\n          curComponent={curComponent}\n          setCurComponent={setCurComponent}\n          scale={scale}\n          setShadowPosition={setShadowPosition}\n        />\n        <Grid scale={scale} />\n      </div>\n    </div>\n  )\n}\n\nexport default Drag\n"],"names":[],"mappings":"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"}